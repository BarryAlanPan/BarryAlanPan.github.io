{"pages":[{"title":"关于我","text":"博客创建的开始​ 平时并没有写博客的习惯，笔记全都是手写，在一次看B站学习视频时偶然翻到了这简单强大的Hexo博客框架，在建站后也发现了写博客的乐趣，获得了知识储存的新方式，同时让我对Node.js等产生了兴趣 完善过程中给我带来的乐趣​ 在Hexo中，有些主题的说明文档是由中文编写的，而多数极好的主题（即高可自定，高性能，高效等）的说明文档都是由英文编写，这使得英文成为了程序员不可或缺的一部分，也同时激起了我对英语的兴趣和重视，在搭建和完善的过程中，有许多难点和奇怪之处，这就考验了查资料和快速学习的能力，就比如我在遇到部署时的诸多问题，像CNAME文件总是被删除导致DNS挂了，页面和模板没法自动生成等奇怪的问题，最终我通过阅读Hexo官方文档，查阅和细化问题完美解决，带给我的受益匪浅。","link":"/about/index.html"}],"posts":[{"title":"Hexo框架实现个人博客","text":"本文志在教会同学们动手搭建个人博客，作为很好的知识储备工具 本文参考自B站优秀up主的视频：https://www.bilibili.com/video/av44544186 本地调试 安装node.js 查看nodejs和npm版本 安装cnpm npm install -g cnpm –registry=https://registry.npm.taobao.org 安装hexo cnpm install -g hexo-cli 验证hexo（hexo -v） 在目录下建立博客文件夹，同时cd进目录 安装git 创建架构 hexo init 开始本地调试 hexo s 创建博文 hexo new “我的第一篇博文” 文章会自动生成在/source/_post目录下 清理并生成 hexo clean hexo g 远端部署 登陆GitHub并新建仓库 仓库名为”用户名.github.io” 创建 在博客目录下安装git插件 cnpm install –save hexo-deployer-git 设置_config.yml 在Deployment下的type: 后加上git（注意！type:和git间有一空格） 在type项下一行加 1repo: 仓库链接 下一行加 1branch: master 设置git 12git config --global user.name &quot;Your Name&quot;git config --global user.email &quot;email@example.com&quot; 部署到远端 hexo d 登陆github 大功告成！！！ 仓库名.github.io 主题更换 下载zip包解压在themes文件夹下或git clone下来 在博客目录中更改 1theme: 主题名（默认是landscape） 清理并生成 hexo clean hexo g 调试并部署 进阶部分（域名更改）嫌xxx.github.com太丑了？花钱买一个域名！ ping你的个人博客（xxx.github.io），拿到IP地址后复制下来 对你的域名进行管理 添加解析 记录类型 主机记录 解析线路 记录值 TTL值 CNAME www 默认 xxx.github.io 10分钟 A @ 默认 IP地址 10分钟 最后一步 到github项目中 找到Github Pages一栏 在Custom Domain填上你的域名并保存（注意：域名指”xxx.cn”等等） 等待十分钟，开始愉快的玩耍","link":"/2019/07/04/Hexo框架实现个人博客/"},{"title":"Reverse逆向工程","text":"反逆向123- 混淆、加壳- 帮助逆向：去混淆、脱壳- JS混淆 搜题方法 Google CTF + 题名 高级逆向工具 Z3：约束求解 angr：自动求解 pintools：侧信道（逐字节验证） Linux pwndbg：断点调试 IDA 手动解析 LazyIDA：快速提取数组 数据类型的字长 注意问题 大小端 函数调用约定（X86/X64） 数据类型指针所占Byte长度 Linux ELF gdb 观察程序行为 strace：观察系统调用 ltrace：观察库调用 Windows逆向 调试工具 Ollydbg X64dbg 其他平台 Github搜索 架构名称 + decompiler","link":"/2019/07/04/Reverse逆向工程/"},{"title":"学习方法总结","text":"不断迭代的学习方法​ 时间推移，设备也随之改善，不断出现的笔记软件会改变我们记笔记的方法，找到适合自己的学习方法，定能让效率提升数倍。 设备清单 一台笨重的游戏本（当年脑子进水买的） 一台IPAD PRO+Apple Pencil 二代（用任意IPAD替代） 软件清单 Xmind 印象笔记 Noteability 个人博客 如何合理搭配软件​ Xmind是款优秀的思维整理软件，无论在什么场景都有它能起作用的地方，而Xmind恰好能调用印象笔记并自动排版好笔记，让人们无需再关心笔记的排版。 图中Evernote分享方法会自动将思维导图源文件、图片以及大纲归档 而学习的时候有很多图或者复杂的公式又或者是各类图文汇总是无法通过文本编辑和思维导图作出的，这时候便用上了另一款软件：Noteability，只需要将东西用手写下来就行（这里有必要提下取代纸质笔记本的原因，我不想每次出门还要从书架或者各种地方找我的笔记本，而且每次去图书馆都要背很厚的书包），值得一提的是，noteability还同时提供一键录音功能，老师讲的太快或没听清，只需要按一下；而最好的地方莫过于它能很方便的导出了，能够直接导出PDF到印象笔记，还有任何你想让他出现的地方，岂不美哉 提供丰富的选项，非常方便（不要吐槽我的字🤮，瞎写的） ​ 而重头戏则是印象笔记了，我们经历了这么多步学习过程，最终把书本里的知识通过梳理变成了自己的Object，这些精华我们可以随时随地查看，因为印象笔记的多端同步很容易就能做到这一点，至于如何用好印象笔记，每个人每件事都有其不同的用法。 具体实例​ 王爽老师的《汇编语言》可以说是写得相对易懂的一本书了，而我希望能够长时间记住一些细节，或者我想以后能拿出来看，所以我在看的同时会用Xmind记录重要的知识点 在汇编语言的笔记本中，我同时加入了Xmind的自动归档和Noteability的PDF ​ 我可以在需要时进行编辑和复习，非常简单，只需要新建笔记本然后开始完善它，汇编语言的知识点比较多和杂，因此我会用Xmind梳理思维，用noteability记录我精简后的知识点。 尾声​ 这篇文章会一直更新，也欢迎小伙伴联系我发表自己的意见和学习方法，一切为了高效。","link":"/2019/08/14/学习方法总结/"},{"title":"黑苹果装机WriteUp","text":"写在开头​ 2019年7月30日，在我心中酝酿许久的那颗对于MacOS的渴望之心，终于还是迸发了出来，也就有了这个Write Up，旨在能够让自己坚持搞下去（毕竟大价钱买的SSD）且能给后面要装黑苹果的同学铺个路，不多说，直接上配置。 配置 笔记本机型：神舟战神G8-KP7S1 主板：Notebook P65_67HSHP ( 100 Series/C230 Series 芯片组 Family - A152 ) CPU：英特尔 Core i7-7700HQ @ 2.80GHz 四核 内存：16 GB ( 英睿达 DDR4 2400MHz ) 显卡：Nvidia GeForce GTX 1070 ( 8 GB / 蓝天(CLEVO) ) 声卡：瑞昱 ALC899 @ 英特尔 High Definition Audio 控制器 网卡：瑞昱 RTL8168/8111/8112 Gigabit Ethernet Controller / 蓝天(CLEVO) Day1​ 开始装机，这款神舟用的蓝天准系统 公模，所以拆完D面就直接找到了多出的M.2接口 D面大体就是这个亚子 如图，左边有一个空闲的M.2插槽 ​ 然而问题来了，我拿手边一个空闲的SSD试了一下发现接口对不上，在查阅后发现了问题，原来是因为M.2接口也分Socket2和Socket3，而他们的区别也不止在支持的协议上，还有他们的接口形状。 图示为2和3明显的接口区别，购买时千万不要踩坑 ​ 观察完了插槽和接口还不够，我拨打了神舟客服询问了该拓展插槽支持的协议，惊奇的发现不支持NVMe，只支持SATA和PCIe，最终我只得放弃三星的高速SSD，选择了Intel的稳定且价格较低的500G SSD。 ​ 然后就是坐等到货的漫长时光啦，Day1 END。。。 Day2​ 今天算是工程中最重要的步骤之一，我要检查是否每个硬件都有其对应的apple原生驱动，首先来到声卡，这很明显是一块板载的ALC899声卡，我查了下，竟恰好有托管在github上的项目专门针对ALC899在MacOS中的原生高音质输出进行体现和维护 Github中的项目 ​ 然后就是烧录U盘了，我用的balenaetcher，这是一个在Github上的开源项目，支持MacOS的dmg安装文件的烧录，但在烧录之前，我还要校验一遍MD5来确保dmg文件没有问题，然后烧录进去。 ​ 在烧录完的盘里配置了一下plist文件，研究了很多关于配置的文章，坐等明天取回盘后开工！ ​ Day2 END Day3​ 硬盘取回家前，先将系统包（包内含用于EFI恢复的PE系统、Clover引导和苹果系统安装程序）烧录进U盘 ESP分区内的EFI为Clover引导文件夹 烧录完后的U盘存储结构 ​ 我们已经确认了ESP分区为存放Clover引导的地方，PE分区显然是PE系统，而5.77GB的分区我们可以猜测就是MacOS的安装包存放位置 ​ 下面就进入到装SSD环节 可以明显的看到神舟原厂并没有给配M.2螺丝 而螺丝的短小超出了我的想象 ​ 最后只得利用我所能找到最短且口径相同的螺丝代替，SSD仍存在松动，这也是我不得不吐槽神舟的地方，盒子里不给配螺丝，扩展位也不给螺丝，非常不方便加装。 ​ 烧录完成后我重新插拔U盘并进行重启，在开机页面F2进入BIOS页面，选择通过USB启动，成功的进入了Clover引导页面，然而迎来的却是更大的问题 Clover只能识别Windows系统，却识别不到安装包 ​ 最终尝试N次后无果，确认是镜像出了问题，立即换了网站下载镜像并重复以上步骤，进入Clover页面终于看到了安装包选项，接下来是更头疼的问题 滚代码时屏幕出现🚫符号 ​ 在查阅CSDN和简书中的类似问题后发现，一切有关🚫的问题都指向了“Couldn’t allocate memory”这个Error，翻译成中文就是无法分配内存，而这只有在Mac系统下的Clover Configure中设置EFI才能解决，也就是说在当前情况下这个问题是无解的，最后只得借助网上已经配好的EFI碰运气，终于在更换了一个类似机型的config.plist文件后进入了安装页面（具体解决原理会在后面讲到） 一开始尝试更改启动选项为AHCI，然而没有效果 ⬆️成功进入安装页面后的成就感（虽然当时的EFI是抄来的） ​ 就这样，系统成功安装，但是在使用方面仍存在很多问题，也是后面几天会解决的问题，到Day3结束时就已经查询了近百篇博客，知识量的庞大非常考验人的毅力和总结能力，因为黑苹果的许多特殊原因（错误的多样性等等），有许多问题需要自己去尝试和寻找答案，这是个高压且工作量巨大的过程。 Day3 END Day4","link":"/2019/07/30/黑苹果装机WriteUp/"}],"tags":[{"name":"Hexo","slug":"Hexo","link":"/tags/Hexo/"},{"name":"已授课","slug":"已授课","link":"/tags/已授课/"},{"name":"Node.js","slug":"Node-js","link":"/tags/Node-js/"},{"name":"Github","slug":"Github","link":"/tags/Github/"},{"name":"逆向","slug":"逆向","link":"/tags/逆向/"},{"name":"复旦课程","slug":"复旦课程","link":"/tags/复旦课程/"},{"name":"印象笔记","slug":"印象笔记","link":"/tags/印象笔记/"},{"name":"Noteability","slug":"Noteability","link":"/tags/Noteability/"},{"name":"Xmind","slug":"Xmind","link":"/tags/Xmind/"},{"name":"黑苹果","slug":"黑苹果","link":"/tags/黑苹果/"},{"name":"装机","slug":"装机","link":"/tags/装机/"}],"categories":[{"name":"课程","slug":"课程","link":"/categories/课程/"},{"name":"笔记","slug":"笔记","link":"/categories/笔记/"},{"name":"Write Up","slug":"Write-Up","link":"/categories/Write-Up/"}]}